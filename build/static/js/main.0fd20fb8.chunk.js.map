{"version":3,"sources":["App.tsx","index.tsx"],"names":["Component","React","lazy","App","windowOpened","setWindowOpened","useState","open","setOpen","win","useRef","root","embeddedRef","openDetachedWindow","useCallback","url","onClose","current","window","document","createElement","id","body","appendChild","addEventListener","closeDetachedWindow","close","className","onClick","unmountComponentAtNode","render","fallback","style","height","createPortal","ref","rootElement","getElementById"],"mappings":"6MAIA,MAAMA,EAAYC,IAAMC,MAAK,IAAM,+BAEpB,SAASC,IACtB,MAAOC,EAAcC,GAAmBJ,IAAMK,UAAS,IAChDC,EAAMC,GAAWP,IAAMK,SAM5B,QACIG,EAAMR,IAAMS,OAAsB,MAClCC,EAAOV,IAAMS,OAA8B,MAC3CE,EAAcX,IAAMS,OAAuB,MAE3CG,EAAqBZ,IAAMa,aAC/B,CAACC,EAAaC,KAA0B,IAAD,IACrCP,EAAIQ,QAAUC,OAAOX,KAAKQ,EAAK,SAAU,wBACzCJ,EAAKM,QAAUE,SAASC,cAAc,OACtCT,EAAKM,QAAQI,GAAK,OAClB,UAAAZ,EAAIQ,eAAJ,SAAaE,SAASG,KAAKC,YAAYZ,EAAKM,SAC5C,UAAAR,EAAIQ,eAAJ,SAAaO,iBAAiB,YAAY,KACpCR,GACFA,IAEFL,EAAKM,QAAU,KACfR,EAAIQ,QAAU,KACdZ,GAAgB,MAElBA,GAAgB,KAElB,IAGIoB,EAAsBxB,IAAMa,aAAY,KAAO,IAAD,EAClD,UAAAL,EAAIQ,eAAJ,SAAaS,UACZ,IAEH,OACE,sBAAKC,UAAU,MAAf,UACE,sEACA,wBACEC,QAAS,KACPf,EAAmB,IACnBL,EAAQ,qBAHZ,mDAQA,wBACEoB,QAAS,KACPf,EAAmB,IAAI,KAChBF,EAAKM,SAGVY,iCAAuBlB,EAAKM,YAEzBN,EAAKM,UAGVa,iBACE,cAAC,WAAD,CAAUC,SAAU,aAApB,SACE,cAAC/B,EAAD,MAEFW,EAAKM,SAEPT,EAAQ,0BAjBZ,8DAsBA,wBACEoB,QAAS,KACPH,IACAjB,EAAQ,SAHZ,mCAQA,qBAAKwB,MAAO,CAAEC,OAAQ,MACtB,wBACEL,QAAS,KACPpB,EAAQ,oBAFZ,wCAOA,wBACEoB,QAAS,KACPpB,EAAQ,SAFZ,oCAOA,qBAAKwB,MAAO,CAAEC,OAAQ,MACtB,wBACEL,QAAS,KACFhB,EAAYK,SAGjBa,iBACE,cAAC,WAAD,CAAUC,SAAU,aAApB,SACE,cAAC/B,EAAD,MAEFY,EAAYK,UATlB,mDAeA,wBACEW,QAAS,KACFhB,EAAYK,SAGjBY,iCAAuBjB,EAAYK,UALvC,oDAUA,qBAAKe,MAAO,CAAEC,OAAQ,MACtB,eAAC,WAAD,CAAUF,SAAU,aAApB,UACY,qBAATxB,GACCH,GACAK,EAAIQ,SACJN,EAAKM,SACLiB,uBAAa,cAAClC,EAAD,IAAeW,EAAKM,SACzB,oBAATV,GACCK,EAAYK,SACZiB,uBAAa,cAAClC,EAAD,IAAeY,EAAYK,YAE5C,qBAAKkB,IAAKvB,OCnIhB,MAAMwB,EAAcjB,SAASkB,eAAe,QAC5CP,iBAAO,cAAC3B,EAAD,IAASiC,I","file":"static/js/main.0fd20fb8.chunk.js","sourcesContent":["import React, { Suspense } from \"react\";\nimport { createPortal, render, unmountComponentAtNode } from \"react-dom\";\nimport \"./styles.css\";\n\nconst Component = React.lazy(() => import(\"./Component\"));\n\nexport default function App() {\n  const [windowOpened, setWindowOpened] = React.useState(false);\n  const [open, setOpen] = React.useState<\n    | \"none\"\n    | \"portal-in-window\"\n    | \"portal-embedded\"\n    | \"react-tree-in-window\"\n    | \"react-tree-embedded\"\n  >(\"none\");\n  const win = React.useRef<Window | null>(null);\n  const root = React.useRef<HTMLDivElement | null>(null);\n  const embeddedRef = React.useRef<HTMLDivElement>(null);\n\n  const openDetachedWindow = React.useCallback(\n    (url: string, onClose?: () => void) => {\n      win.current = window.open(url, \"_blank\", \"width=320,height=320\");\n      root.current = document.createElement(\"div\");\n      root.current.id = \"root\";\n      win.current?.document.body.appendChild(root.current);\n      win.current?.addEventListener(\"pagehide\", () => {\n        if (onClose) {\n          onClose();\n        }\n        root.current = null;\n        win.current = null;\n        setWindowOpened(false);\n      });\n      setWindowOpened(true);\n    },\n    []\n  );\n\n  const closeDetachedWindow = React.useCallback(() => {\n    win.current?.close();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Memory leak in detached React portal</h1>\n      <button\n        onClick={() => {\n          openDetachedWindow(\"\");\n          setOpen(\"portal-in-window\");\n        }}\n      >\n        OPEN WINDOW AND RENDER THROUGH PORTAL\n      </button>\n      <button\n        onClick={() => {\n          openDetachedWindow(\"\", () => {\n            if (!root.current) {\n              return;\n            }\n            unmountComponentAtNode(root.current);\n          });\n          if (!root.current) {\n            return;\n          }\n          render(\n            <Suspense fallback={\"...loading\"}>\n              <Component />\n            </Suspense>,\n            root.current\n          );\n          setOpen(\"react-tree-in-window\");\n        }}\n      >\n        OPEN WINDOW AND RENDER INDEPENDED REACT DOM TREE\n      </button>\n      <button\n        onClick={() => {\n          closeDetachedWindow();\n          setOpen(\"none\");\n        }}\n      >\n        CLOSE DETACHED WINDOW\n      </button>\n      <div style={{ height: 16 }}></div>\n      <button\n        onClick={() => {\n          setOpen(\"portal-embedded\");\n        }}\n      >\n        RENDER THROUGH PORTAL HERE\n      </button>\n      <button\n        onClick={() => {\n          setOpen(\"none\");\n        }}\n      >\n        REMOVE EMBEDDED PORTAL\n      </button>\n      <div style={{ height: 16 }}></div>\n      <button\n        onClick={() => {\n          if (!embeddedRef.current) {\n            return;\n          }\n          render(\n            <Suspense fallback={\"...loading\"}>\n              <Component />\n            </Suspense>,\n            embeddedRef.current\n          );\n        }}\n      >\n        RENDER INDEPENDED REACT DOM TREE HERE\n      </button>\n      <button\n        onClick={() => {\n          if (!embeddedRef.current) {\n            return;\n          }\n          unmountComponentAtNode(embeddedRef.current);\n        }}\n      >\n        UNMOUNT INDEPENDED REACT DOM TREE HERE\n      </button>\n      <div style={{ height: 16 }}></div>\n      <Suspense fallback={\"...loading\"}>\n        {open === \"portal-in-window\" &&\n          windowOpened &&\n          win.current &&\n          root.current &&\n          createPortal(<Component />, root.current)}\n        {open === \"portal-embedded\" &&\n          embeddedRef.current &&\n          createPortal(<Component />, embeddedRef.current)}\n      </Suspense>\n      <div ref={embeddedRef}></div>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}